# we will use the gsub() function
gsub(",", "", gdp$gdp)
gdp
# we calculate the mean of it by
gdp[, mean(gsub(",", "", gdp$gdp))]
# let's remove the "," from the gdp column
# we will use the gsub() function
gdpcleaned <- gsub(",", "", gdp$gdp)
# we calculate the mean of it by
mean(gdpcleaned, na.rm = TRUE)
gdp <- read.csv("./data/gdp.csv", skip = 4, header = TRUE, stringsAsFactors = FALSE, nrows = 190)
gdp
# let's clean up and retain only the columns with data
gdp <- gdp[, c(1, 2, 4, 5)]
# we change the header's name
names(gdp) <- c("countrycode", "rank", "economy", "gdp")
names(gdp)
gdp
str(gdp)
library(dplyr)
# let's remove the "," from the gdp column
# we will use the gsub() function
gdpcleaned <- gsub(",", "", gdp$gdp)
str(gdp)
# let's remove the "," from the gdp column
# we will use the gsub() function
gdpcleaned <- gsub(",", "", gdp$gdp)
dgpclean <- as.numeric(gdpcleaned)
clean <- as.numeric(gdpcleaned)
str(clean)
mean(clean, na.rm = TRUE)
# we change the header's name
names(gdp) <- c("countrycode", "rank", "countryName", "gdp")
names(gdp)
# 3. Question 3:
# let's find the number of countries that starts with "United"
grep("*United", countryNames)
# 3. Question 3:
# let's find the number of countries that starts with "United"
countryNames <- gdp[,countryNames]
# 3. Question 3:
# let's find the number of countries that starts with "United"
countryNames <- gdp[[countryNames]]
# 3. Question 3:
# let's find the number of countries that starts with "United"
countryNames <- gdp[,3]
countryNames
grep("United", countryNames)
grep("United$", countryNames)
grep("*United", countryNames)
grep("^United", countryNames)
fileUrl1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileUrl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2FEDSTATS_Country.csv"
download.file(fileUrl1, destfile = "./data/GDP.csv", method = "curl")
download.file(fileUrl2, destfile = "./data/EDU.csv", method = "curl")
# 4. Question 4:
# first we install the 2 packages that we will use: dplyr and data.tables
library(dplyr)
library(data.table)
# let's load them into R by using the fread()
gdp <- fread("./data/GDP.csv", skip = 4, nrows = 190, select = c(1, 2, 4, 5), col.names = c("CountryCode", "Rank", "CountryName", "GDP"))
edu <- fread("./data/EDU.csv")
edu <- fread("./data/EDU.csv")
# let's view the 2 data set we just created
View(gdp)
source('~/Coursera/Data Science - JH/3 Getting and Cleaning Data/Week 4/Quizzweek4.R')
View(edu)
edu <- fread("./data/EDU.csv", header = TRUE, fill = TRUE)
View(edu)
fileUrl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl2, destfile = "./data/EDU.csv", method = "curl")
edu <- fread("./data/EDU.csv")
View(edu)
# let's load them into R by using the fread() this will create tibble
gdp <- fread("./data/GDP.csv", skip = 5, nrows = 190, select = c(1, 2, 4, 5), col.names = c("CountryCode", "Rank", "CountryName", "GDP"))
# let's view the 2 data set we just created
View(gdp)
# let's join the 2 data sets
merged <- merge(gdp, edu, by="CountryCode")
View(merged)
class(merged)
merged[.N,]
nrows(merged)
nrow(merged)
# we need to find the number of countries based on their country short code,
# how many for which the end of the fiscal year is available, end in june.
# The information we are looking for is in the column "Special Notes"
# We need to find the number of occurences of the phrase:
# "Fiscal year end: June 30"
june <- grep("Fiscal year end: June 30", merged$`Special Notes`)
length(june)
# 5. Question 5:
# first install the quantmode package
install.packages("quantmod")
# load into R
library(quantmod)
# let's load the data set into R
amzn <- getSymbols("AMZN", auto.assign = FALSE)
sampleTimes <- index(amzn)
View(sampleTimes)
class(sampleTimes)
# first let's find the number of values collected in 2012?
year2012 <- grepl("2012-*")
# first let's find the number of values collected in 2012?
year2012 <- grepl("2012-*", sampleTimes)
nrow(year2012)
View(year2012)
subset2012 <- subset(sampleTimes, year2012)
View(subset2012)
length(subset2012)
table(subset2012)
table(year2012)
# finally let's find the values collected on Mondays in 2012?
# first we split into days
day <- format(subset2012, %A)
# finally let's find the values collected on Mondays in 2012?
# first we split into days
day <- format(subset2012, '%A')
table(day)
# we could put them both together
table(subset2012, day)
# we could put them both together
table(year2012, day)
# the solution is
table(day)
table(year2012)
source('~/Coursera/Data Science - JH/3 Getting and Cleaning Data/Week 4/Quizzweek4.R')
required_package <- c("dplyr", "readr", "tidyr")
is_installed <- function(mypkg) is.element(mypkg, installed.packages()[,1])
for (i in required_pacakge) {
if(!is_installed(required_package[i])){
install.packages(required_package[i])
} else {
load(required_package[i])
}
for (i in required_package) {
if(!is_installed(required_package[i])){
install.packages(required_package[i])
} else {
load(required_package[i])
}
for (i in required_package){i}
for (i in required_package){print(i)}
for (i in required_package) {
if(!is_installed(i)){
install.packages(i)
} else {
load(i)
}
for (i in required_package){library(i)}
for (i in required_package){i %>% library()}
for (i in required_package){library(i)}
for (thepackage in required_package) {
if(!is_installed(thepackage)){
install.packages(thepackage, )
} else {
library(thepackage)
}
for (thepackage in required_package) {
if(!is_installed(thepackage)){
install.packages(thepackage, )
} else {
library(thepackage)
}
# let's create a vector that will contain them
required_package <- c("dplyr", "readr", "tidyr")
required_package
# Thanks to R-bloggers i found a function that allows to check the existence
# of the package:
is_installed <- function(mypkg) is.element(mypkg, installed.packages()[,1])
for (thepackage in required_package) {
if(!is_installed(thepackage)){
install.packages(thepackage, )
} else {
library(thepackage)
}
for (thepackage in required_package) {
if(!is_installed(thepackage)){
install.packages(thepackage, repos = "https://cloud.r-project.org")
} else {
library(thepackage, character.only=TRUE,quietly=TRUE,verbose=FALSE)
}
for (thepackage in required_package) {
if(!is_installed(thepackage)){
install.packages(thepackage, repos = "https://cloud.r-project.org")
} else {
library(thepackage, character.only=TRUE)
}
?select
?read_csv
?gather
?unzip
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl, destfile = "./data/gdcassignment.zip", method = "curl")
install.packages(c("digest", "dplyr", "knitr", "pillar", "progress", "reprex", "rvest", "tinytex", "xfun"))
install.packages("digest")
getwd()
list.files()
dir()
?par
library(datasets)
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
pdf(file = "myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.off()
library(swirl)
swirl()
?Devices
dev.cur()
?with
data("airquality")
with(airquality, {
plot(Temp, Ozone)
lines(loess.smooth(Temp, Ozone))
})
setwd("~/Coursera/Data Science - JH/4 Exploratory Data Analysis/Week 1/Assignment/Exploratory-Data-Analysis-Project-1")
# Class: Exploratory Data Analysis
# Script Name: Plot4.R
# Author: Jean-Philippe Maillard
# Assignment: Week 1 Project 1
# Type: Plotting multiple lines plots on 2 rows, 2 columns
# Packages: data.table, dplyr
# Assumptions: packages installed, working directory identical
#              than file folder.
# first load necessary packages
library(data.table)
library(dplyr)
# load the data into R console using dat.table package
data <- fread("household_power_consumption", sep=";", na.strings = "?", Header=TRUE, stringsAsFactors = FALSE)
# take the subset for dates using dplyr package
consumption <- filter(data, Date=="1/2/2007" | Date=="2/2/2007")
# convert dates and create the timestamp variable
DateTime <- with(consumption, (strptime(paste(Date, Time, sep = " "),"%d/%m/%Y %H:%M:%S" )))
consumption$Date <- as.Date(consumption$Date, "%dd/%mm%yyyy")
# open the png device
png("plot4.png", width = 480, height = 480)
# create the display: 2 graphes per col and lines ( 2, 2)
par(mfrow=c(2,2))
# create the first plot (first row, first column)
with(consumption, plot(DateTime, Global_active_power, type="l", xlab="", ylab = "Global Active Power (kilowatts)"))
# create the second plot (first row, second column)
with(consumption, plot(DateTime, Voltage, type="l", xlab="datetime", ylab = "Voltage"))
# create the third plot (second row, first column)
with(consumption, plot(DateTime, Sub_metering_1, type="l", xlab = "", ylab = "Energy Submettering"))
with(consumption, lines(DateTime, Sub_metering_2, col="red"))
with(consumption, lines(DateTime, Sub_metering_3, col="blue"))
# we had the legend
legend("topright", pch = "_", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# create the fourth plot (second row, second column)
with(consumption, plot(DateTime, Global_reactive_power, type="l", xlab= "datetime", ylab = "Global_reactive_power"))
# we close the device
dev.off()
head(consumption)
head(data)
data <- fread("household_power_consumption", sep=";", na.strings = "?", Header=TRUE, stringsAsFactors = FALSE)
# Class: Exploratory Data Analysis
# Script Name: Plot4.R
# Author: Jean-Philippe Maillard
# Assignment: Week 1 Project 1
# Type: Plotting multiple lines plots on 2 rows, 2 columns
# Packages: data.table, dplyr
# Assumptions: packages installed, working directory identical
#              than file folder.
# first load necessary packages
library(data.table)
library(dplyr)
# load the data into R console using dat.table package
data <- fread("household_power_consumption.txt", sep=";", na.strings = "?", Header=TRUE, stringsAsFactors = FALSE)
# take the subset for dates using dplyr package
consumption <- filter(data, Date=="1/2/2007" | Date=="2/2/2007")
# convert dates and create the timestamp variable
DateTime <- with(consumption, (strptime(paste(Date, Time, sep = " "),"%d/%m/%Y %H:%M:%S" )))
consumption$Date <- as.Date(consumption$Date, "%dd/%mm%yyyy")
# open the png device
png("plot4.png", width = 480, height = 480)
# create the display: 2 graphes per col and lines ( 2, 2)
par(mfrow=c(2,2))
# create the first plot (first row, first column)
with(consumption, plot(DateTime, Global_active_power, type="l", xlab="", ylab = "Global Active Power (kilowatts)"))
# create the second plot (first row, second column)
with(consumption, plot(DateTime, Voltage, type="l", xlab="datetime", ylab = "Voltage"))
# create the third plot (second row, first column)
with(consumption, plot(DateTime, Sub_metering_1, type="l", xlab = "", ylab = "Energy Submettering"))
with(consumption, lines(DateTime, Sub_metering_2, col="red"))
with(consumption, lines(DateTime, Sub_metering_3, col="blue"))
# we had the legend
legend("topright", pch = "_", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# create the fourth plot (second row, second column)
with(consumption, plot(DateTime, Global_reactive_power, type="l", xlab= "datetime", ylab = "Global_reactive_power"))
# we close the device
dev.off()
data <- fread("household_power_consumption.txt", sep=";", na.strings = "?", Header=TRUE, stringsAsFactors = FALSE)
# load the data into R console using dat.table package
data <- fread("household_power_consumption.txt", sep=";", na.strings = "?", stringsAsFactors = FALSE)
# Class: Exploratory Data Analysis
# Script Name: Plot1.R
# Author: Jean-Philippe Maillard
# Assignment: Week 1 Project 1
# Type: Plotting histogram
# Packages: data.table, dplyr
# Assumptions: packages installed, working directory identical
#              than file folder.
# first load necessary packages
library(data.table)
library(dplyr)
# load the data into R console using dat.table package
data <- fread("household_power_consumption.txt", sep=";", na.strings = "?", stringsAsFactors = FALSE)
# take the subset for dates using dplyr package
consumption <- filter(data, Date=="01/02/2007" | Date=="02/02/2007")
# open the png device
png("plot1.png", width = 480, height = 480)
# create the histogram plot with labels, title and color
with(consumption, hist(Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", col="red"))
# close the device
dev.off()
with(consumption, hist(Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", col="red"))
names(consumption)
str(consumption)
hist(consumption$Global_active_power, main ="Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", col = "red")
library(data.table)
library(dplyr)
View(consumption)
# Class: Exploratory Data Analysis
# Script Name: Plot1.R
# Author: Jean-Philippe Maillard
# Assignment: Week 1 Project 1
# Type: Plotting histogram
# Packages: data.table, dplyr
# Assumptions: packages installed, working directory identical
#              than file folder.
# first load necessary packages
library(data.table)
library(dplyr)
# load the data into R console using dat.table package
data <- fread("household_power_consumption.txt", sep=";", na.strings = "?", stringsAsFactors = FALSE)
# take the subset for dates using dplyr package
consumption <- filter(data, Date=="01/02/2007" | Date=="02/02/2007")
# open the png device
png("plot1.png", width = 480, height = 480)
# create the histogram plot with labels, title and color
with(consumption, hist(Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", col="red"))
# close the device
dev.off()
# take the subset for dates using dplyr package
consumption <- filter(data, Date=="01/02/2007" | Date=="02/02/2007")
head(consumption)
# load the data into R console using dat.table package
data <- fread("household_power_consumption.txt", sep=";", na.strings = "?", stringsAsFactors = FALSE)
head(data)
# Class: Exploratory Data Analysis
# Script Name: Plot1.R
# Author: Jean-Philippe Maillard
# Assignment: Week 1 Project 1
# Type: Plotting histogram
# Packages: data.table, dplyr
# Assumptions: packages installed, working directory identical
#              than file folder.
# first load necessary packages
library(data.table)
library(dplyr)
# load the data into R console using dat.table package
data <- fread("household_power_consumption.txt", sep=";", na.strings = "?", stringsAsFactors = FALSE)
# take the subset for dates using dplyr package
consumption <- filter(data, Date=="1/2/2007" | Date=="2/2/2007")
# open the png device
png("plot1.png", width = 480, height = 480)
# create the histogram plot with labels, title and color
with(consumption, hist(Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", col="red"))
# close the device
dev.off()
# Class: Exploratory Data Analysis
# Script Name: Plot2.R
# Author: Jean-Philippe Maillard
# Assignment: Week 1 Project 1
# Type: Plotting line
# Packages: data.table, dplyr
# Assumptions: packages installed, working directory identical
#              than file folder.
# first load necessary packages
library(data.table)
library(dplyr)
# load the data into R console using dat.table package
data <- fread("household_power_consumption.txt", sep=";", na.strings = "?", Header=TRUE, stringsAsFactors = FALSE)
# take the subset for dates using dplyr package
consumption <- filter(data, Date=="1/2/2007" | Date=="2/2/2007")
# convert dates and create a timestamp to use in the plot
DateTime <- with(consumption, (strptime(paste(Date, Time, sep = " "),"%d/%m/%Y %H:%M:%S" )))
consumption$Date <- as.Date(consumption$Date, "%dd/%mm%yyyy")
# open the png device
png("plot2.png", width = 480, height = 480)
# create the line plot (type="l") with axis labels, title.
with(consumption, plot(DateTime, Global_active_power, type="l", ylab = "Global Active Power (kilowatts)", xlab = ""))
# close the device.
dev.off()
# Class: Exploratory Data Analysis
# Script Name: Plot2.R
# Author: Jean-Philippe Maillard
# Assignment: Week 1 Project 1
# Type: Plotting line
# Packages: data.table, dplyr
# Assumptions: packages installed, working directory identical
#              than file folder.
# first load necessary packages
library(data.table)
library(dplyr)
# load the data into R console using dat.table package
data <- fread("household_power_consumption.txt", sep=";", na.strings = "?", stringsAsFactors = FALSE)
# take the subset for dates using dplyr package
consumption <- filter(data, Date=="1/2/2007" | Date=="2/2/2007")
# convert dates and create a timestamp to use in the plot
DateTime <- with(consumption, (strptime(paste(Date, Time, sep = " "),"%d/%m/%Y %H:%M:%S" )))
consumption$Date <- as.Date(consumption$Date, "%dd/%mm%yyyy")
# open the png device
png("plot2.png", width = 480, height = 480)
# create the line plot (type="l") with axis labels, title.
with(consumption, plot(DateTime, Global_active_power, type="l", ylab = "Global Active Power (kilowatts)", xlab = ""))
# close the device.
dev.off()
# Class: Exploratory Data Analysis
# Script Name: Plot3.R
# Author: Jean-Philippe Maillard
# Assignment: Week 1 Project 1
# Type: Plotting line
# Packages: data.table, dplyr
# Assumptions: packages installed, working directory identical
#              than file folder.
# first load necessary packages
library(data.table)
library(dplyr)
# load the data into R console using dat.table package
data <- fread("household_power_consumption", sep=";", na.strings = "?", stringsAsFactors = FALSE)
# take the subset for dates using dplyr package
consumption <- filter(data, Date=="1/2/2007" | Date=="2/2/2007")
# convert dates and create a timestamp to use in the plot
DateTime <- with(consumption, (strptime(paste(Date, Time, sep = " "),"%d/%m/%Y %H:%M:%S" )))
consumption$Date <- as.Date(consumption$Date, "%dd/%mm%yyyy")
# open the png device
png("plot3.png", width = 480, height = 480)
# create the line (type = l) plot on the device with multiple data lines, labels and colors
with(consumption, plot(DateTime, Sub_metering_1, type="l", ylab = "Energy Submettering", xlab = ""))
with(consumption, lines(DateTime, Sub_metering_2, col="red"))
with(consumption, lines(DateTime, Sub_metering_3, col="blue"))
# add the legend with special character using in it "_"
legend("topright", pch = "_", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# close the device
dev.off()
# Class: Exploratory Data Analysis
# Script Name: Plot3.R
# Author: Jean-Philippe Maillard
# Assignment: Week 1 Project 1
# Type: Plotting line
# Packages: data.table, dplyr
# Assumptions: packages installed, working directory identical
#              than file folder.
# first load necessary packages
library(data.table)
library(dplyr)
# load the data into R console using dat.table package
data <- fread("household_power_consumption.txt", sep=";", na.strings = "?", stringsAsFactors = FALSE)
# take the subset for dates using dplyr package
consumption <- filter(data, Date=="1/2/2007" | Date=="2/2/2007")
# convert dates and create a timestamp to use in the plot
DateTime <- with(consumption, (strptime(paste(Date, Time, sep = " "),"%d/%m/%Y %H:%M:%S" )))
consumption$Date <- as.Date(consumption$Date, "%dd/%mm%yyyy")
# open the png device
png("plot3.png", width = 480, height = 480)
# create the line (type = l) plot on the device with multiple data lines, labels and colors
with(consumption, plot(DateTime, Sub_metering_1, type="l", ylab = "Energy Submettering", xlab = ""))
with(consumption, lines(DateTime, Sub_metering_2, col="red"))
with(consumption, lines(DateTime, Sub_metering_3, col="blue"))
# add the legend with special character using in it "_"
legend("topright", pch = "_", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# close the device
dev.off()
# Class: Exploratory Data Analysis
# Script Name: Plot4.R
# Author: Jean-Philippe Maillard
# Assignment: Week 1 Project 1
# Type: Plotting multiple lines plots on 2 rows, 2 columns
# Packages: data.table, dplyr
# Assumptions: packages installed, working directory identical
#              than file folder.
# first load necessary packages
library(data.table)
library(dplyr)
# load the data into R console using dat.table package
data <- fread("household_power_consumption.txt", sep=";", na.strings = "?", stringsAsFactors = FALSE)
# take the subset for dates using dplyr package
consumption <- filter(data, Date=="1/2/2007" | Date=="2/2/2007")
# convert dates and create the timestamp variable
DateTime <- with(consumption, (strptime(paste(Date, Time, sep = " "),"%d/%m/%Y %H:%M:%S" )))
consumption$Date <- as.Date(consumption$Date, "%dd/%mm%yyyy")
# open the png device
png("plot4.png", width = 480, height = 480)
# create the display: 2 graphes per col and lines ( 2, 2)
par(mfrow=c(2,2))
# create the first plot (first row, first column)
with(consumption, plot(DateTime, Global_active_power, type="l", xlab="", ylab = "Global Active Power (kilowatts)"))
# create the second plot (first row, second column)
with(consumption, plot(DateTime, Voltage, type="l", xlab="datetime", ylab = "Voltage"))
# create the third plot (second row, first column)
with(consumption, plot(DateTime, Sub_metering_1, type="l", xlab = "", ylab = "Energy Submettering"))
with(consumption, lines(DateTime, Sub_metering_2, col="red"))
with(consumption, lines(DateTime, Sub_metering_3, col="blue"))
# we had the legend
legend("topright", pch = "_", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# create the fourth plot (second row, second column)
with(consumption, plot(DateTime, Global_reactive_power, type="l", xlab= "datetime", ylab = "Global_reactive_power"))
# we close the device
dev.off()
